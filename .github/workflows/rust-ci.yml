on:
  push:
    branches:
    - main
  pull_request: {}

name: CI
jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: check rustfmt
        run: |
          rustup component add rustfmt
          cargo fmt -- --check --color always
      - run: cargo fetch
      - name: cargo clippy
        run: |
          rustup component add clippy
          cargo clippy --all-targets --all-features -- -D warnings
      - uses: EmbarkStudios/cargo-deny-action@v1

  cargo-hack:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - name: Install cargo-hack
        run: |
          curl -LsSf https://github.com/taiki-e/cargo-hack/releases/latest/download/cargo-hack-x86_64-unknown-linux-gnu.tar.gz | tar xzf - -C ~/.cargo/bin
      - name: cargo hack check
        run: cargo hack check --each-feature --no-dev-deps --all

  check-docs:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    - uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        override: true
        profile: minimal
    - uses: Swatinem/rust-cache@v1
    - name: cargo doc
      env:
        RUSTDOCFLAGS: "-D broken-intra-doc-links"
      run: cargo doc --all-features --no-deps

  no-std-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: rustup target add thumbv6m-none-eabi
      - run: cargo build --target thumbv6m-none-eabi --no-default-features

  test:
    name: Test
    strategy:
      matrix:
        # no need to test on all platforms since we don't use platform specific APIs
        # and mac and window are generally the slowest on github actions
        # os: [ubuntu-latest, windows-latest, macOS-latest]
        os: [ubuntu-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v3
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - uses: Swatinem/rust-cache@v1
      - run: cargo fetch
      - name: cargo test build
        run: cargo build --tests
      - name: cargo test
        run: cargo test
